---
# debug
- name: check ansible_os_family
  debug: msg="ansible_os_family = {{ ansible_os_family }}"
  when: epel_debug

- name: check ansible_distribution
  debug: msg="ansible_distribution = {{ ansible_distribution }}"
  when: epel_debug

- name: check ansible_distribution_major_version
  debug: msg="ansible_distribution_major_version = {{ ansible_distribution_major_version }}"
  when: epel_debug

- name: check ansible_distribution_release
  debug: msg="ansible_distribution_release = {{ ansible_distribution_release }}"
  when: epel_debug

- name: check ansible_virtualization_type
  debug: msg="ansible_virtualization_type = {{ ansible_virtualization_type }}"
  when: epel_debug


- name: Get amazon linux version from "uname" command
  shell: >
    awk -v FS="recipe_name=" 'NF>1{print $2}' /etc/image-id | tr -d '"' | awk '{print $1}'
  ignore_errors: true
  check_mode: no
  register: amazon_linux_recipe_name_result
  when: >
    ansible_os_family == 'RedHat' and
    ansible_distribution == 'Amazon'
  changed_when: false

# Define facts to manage amazon linux version in a easy way
- name: Set fact "amazon_linux_distribution_version" for amazon linux 1
  set_fact:
    amazon_linux_distribution_version: 1
  when: >
    ansible_os_family == 'RedHat' and
    ansible_distribution == 'Amazon' and
    amazon_linux_recipe_name_result.stdout == 'amzn'

- name: Set fact "amazon_linux_distribution_version" for amazon linux 2
  set_fact:
    amazon_linux_distribution_version: 2
  when: >
    ansible_os_family == 'RedHat' and
    ansible_distribution == 'Amazon' and
    amazon_linux_recipe_name_result.stdout == 'amzn2'

# Include vars
- name: Include variables for {{ ansible_distribution|lower }}
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
    - "main.yml"
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - include-vars

- name: Include variables for Amazon Linux 1
  include_vars: "{{ item }}"
  with_first_found:
    - "amazon-1.yml"
    - "main.yml"
  when: >
    ansible_distribution == 'Amazon' and
    amazon_linux_distribution_version == 1

- name: Include variables for Amazon Linux 2
  include_vars: "{{ item }}"
  with_first_found:
    - "amazon-2.yml"
    - "main.yml"
  when: >
    ansible_distribution == 'Amazon' and
    amazon_linux_distribution_version == 2

# Installation tasks
- name: Include tasks for installation on {{ansible_distribution}} distribution
  include_tasks: "install-{{ ansible_distribution|lower }}.yml"
  when: >
    ansible_os_family == 'RedHat' and
    ansible_distribution != 'Amazon'

- name: Include tasks for installation on {{ansible_distribution}} distribution
  include_tasks: "install-{{ ansible_distribution|lower }}.yml"
  when: >
    ansible_os_family == 'RedHat' and
    ansible_distribution == 'Amazon'
